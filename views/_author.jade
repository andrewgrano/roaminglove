extends layout

block meta
  title Roaming Love
  mata(charset="utf-8")
  meta(name='description', content='Roaming Love is an online community of travel storytellers. We allow readers a personal, honest look into our trips. We hope our stories inspire others to travel.')

  //- twitter card data
  meta(name="twitter:card" content="summary_large_image")
  meta(name="twitter:site" content="Roaming Love")
  meta(name="twitter:title" content="Roaming Love")
  meta(name="twitter:description" content="Roaming Love is an online community of travel storytellers. We allow readers a personal, honest look into our trips. We hope our stories inspire others to travel.")
  meta(name="twitter:creator" content="Roaming Love")
  meta(name="twitter:image:src" content="https://www.adminroaminglove.com/wp-content/uploads/2016/09/logo.svg")

  //- open graph data
  meta(property="og:title" content="Roaming Love")
  meta(property="og:type" content="article")
  meta(property="og:url" content="http://www.roaminglove.com")
  meta(property="og:image" content="https://www.adminroaminglove.com/wp-content/uploads/2016/09/logo.svg")
  meta(property="og:description" content="Roaming Love is an online community of travel storytellers. We allow readers a personal, honest look into our trips. We hope our stories inspire others to travel.")
  meta(property="og:site_name" content="Roaming Love")
  //- meta(property="fb:admins" content="Facebook numeric ID")

  //- schema.org markup for google+
  meta(itemprop="name" content="Roaming Love")
  meta(itemprop="description" content="Roaming Love is an online community of travel storytellers. We allow readers a personal, honest look into our trips. We hope our stories inspire others to travel.")
  meta(itemprop="image" content="https://www.adminroaminglove.com/wp-content/uploads/2016/09/logo.svg")

block content

    .container.authorPage
            .authorPageHeader
              h1.pageHeading <span class="chevronsRight">>></span> Travel Stories by #{item.name}
              div.hide#authorName= item.name
              -var index = 0
              - for post in records.post
                  if  (post.author.name == item.name )
                    -index++
                    if( index < 2 )
                      if (post.author.last_name)
                        div
                          .authorPageHeader__desc!= post.author.last_name
                      if (post.author.first_name)
                        div
                          .authorPageHeader__link!= 'Follow ' + item.name + ': ' + post.author.first_name.replace(/\[a/g, "<a").replace(/\]/g,">").replace(/\[\/a/g,"</a").replace(/%5D/g,">")

            .postWidget__wrapper.postWidget__wrapper--loading
                - for post in records.post
                    if  (post.author.name == item.name)
                      include templates/post

                .postWidget.postWidget--loading
                  figure.postWidget__img
                    .sk-circle
                      .sk-circle1.sk-child
                      .sk-circle2.sk-child
                      .sk-circle3.sk-child
                      .sk-circle4.sk-child
                      .sk-circle5.sk-child
                      .sk-circle6.sk-child
                      .sk-circle7.sk-child
                      .sk-circle8.sk-child
                      .sk-circle9.sk-child
                      .sk-circle10.sk-child
                      .sk-circle11.sk-child
                      .sk-circle12.sk-child
                  .postWidget__content


block JS
    script
        :uglify-js
            $(function() {
                $(document).ready(function() {
                    var authorName, post2;
                    authorName = $("#authorName").text();


                    // $.get(config.api_url2, function(res) {
                    //     console.log("foo1");
                    //     console.log(res);
                    //     console.log(authorName);
                    //     post2 = res.posts;
                    //     console.log(post2);
                    //     // console.log(post2[0].categories);

                        // $.each(post2, function(index, element) {
                        //     // console.log(element.categories);
                        //     if (element.author.name == authorName ) {
                        //         $('.postWidget__wrapper').append($(templates.post({
                        //             post: post2[index]
                        //         })).hide().fadeIn());
                        //     }
                        // });
                    // });

                    $.get(config.api_url2, function(res) {
                      $(".postWidget--loading").fadeOut().remove();
                      $(".postWidget__wrapper").removeClass("postWidget__wrapper--loading");

                      var widgetsCount = numWidgetsHidden;
                      leftOverWidgetsCount = 0;
                      leftOverWidgets = [];
                      post2 = res.posts;

                      $.each(post2, function(index, element) {
                          // console.log(element.categories);
                          if (element.author.name == authorName ) {
                              $('.postWidget__wrapper').append($(templates.post({
                                  post: post2[index]
                              })).hide().fadeIn());
                          }
                      });
                    });






                });
            });
